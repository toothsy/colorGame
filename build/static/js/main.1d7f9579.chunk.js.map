{"version":3,"sources":["App.js","index.js"],"names":["SquaresGrid","props","state","n","chosenNumber","color","Math","floor","random","r","this","randomFunction","g","b","swal","id","onClick","setState","visited","buttons","closeOnClickOutside","array","console","log","customAlert","i","backgroundColor","randomrbg","push","className","handleClick","bind","style","map","square","index","Fragment","key","e","GuessStripe","document","querySelector","Squares","querySelectorAll","Number","target","textContent","length","background","SquareMaker","Component","App","smallRandomFunction","resetButton","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1d7f9579.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport './App.css';\r\nimport './Square.css';\r\nimport swal from '@sweetalert/with-react';\r\nclass SquaresGrid extends Component{\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {n:props.n,\r\n\t\t\t\t\tchosenNumber:props.chosenNumber,\r\n\t\t\t\t\tcolor:props.color};\r\n\t}\r\n\trandomFunction(){return Math.floor(Math.random() * 256);}\r\n\tsmallRandomFunction(){return Math.floor(Math.random()*5);}\r\n\trandomrbg(){\r\n\t\tlet r = this.randomFunction();\r\n\t\tlet g = this.randomFunction();\r\n\t\tlet b = this.randomFunction();\r\n\t\treturn `rgb(${r}, ${b}, ${g})`;\r\n\t}\r\n\tcustomAlert(){\r\n\t\tswal(<div id=\"swal\" onClick={()=>{this.setState({visited:true})}} >\r\n\t\t\t\t\tA color's RGB value indicates its red,green,\r\n\t\t\t\t\t<br></br>  \r\n\t\t\t\t\tand blue intensity. Each intensity value is on a scale of 0 to 255.\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\tHere, one of the squares has matching rgb value from the header\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\tGuess?\r\n\t\t\t</div>,{buttons:false,closeOnClickOutside:true});\r\n\t}\r\n\tSquareMaker(){\r\n\t\tlet array=[];\r\n\t\t\t\tif(!this.props.visited){\r\n\t\t\t\t\tconsole.log(\"came inside visited if\");\r\n\t\t\t\t\tthis.customAlert();\r\n\t\t\t\t}\r\n\t\t\tfor(var i=0;i< this.props.n;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet color={ backgroundColor:this.randomrbg()}\r\n\t\t\t\t\tif(i === this.props.chosenNumber)\r\n\t\t\t\t\t\tarray.push(<div className=\"Square\"\r\n\t\t\t\t\t\tonClick ={this.handleClick.bind(this)}\r\n\t\t\t\t\t\tid={i}\r\n\t\t\t\t\t\tstyle= {{backgroundColor:`${this.props.color}`}}>\r\n\t\t\t\t\t\t</div>);\r\n\t\t\t\t\telse\r\n\t\t\t\t\tarray.push(<div className=\"Square\"\r\n\t\t\t\t\t\tonClick ={this.handleClick.bind(this)}\r\n\t\t\t\t\t\tid={i}\r\n\t\t\t\t\t\tstyle={color} >\r\n\t\t\t\t\t\t</div>);\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn (<>\r\n\t\t\t\t\t\t\t{array.map((square,index) => \r\n\t\t\t\t\t\t\t\t(<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t\t\t{square}\r\n\t\t\t\t\t\t\t\t</React.Fragment>)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t);\t\r\n\r\n\t}\r\n\thandleClick(e){\r\n\tlet GuessStripe=document.querySelector(\"#Guess\");\r\n\tlet Squares=document.querySelectorAll(\".Square\");\r\n\tif(Number(e.target.id) === this.props.chosenNumber){\r\n\t\tGuessStripe.textContent=\"You Found me !!!!   \";\r\n\t\tdocument.querySelector(\"button\").textContent=\"Play Again?\";\r\n\t\tdocument.querySelector(\"#header\").style.backgroundColor=`${e.target.style.backgroundColor}`;\r\n\t\tfor(var i=0;i<Squares.length;i++){\r\n\t\tSquares[i].style.background=`${e.target.style.backgroundColor}`;\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tGuessStripe.textContent=\"NOOOO\";\r\n\t\te.target.style.backgroundColor=`#232323`;\r\n\t}\r\n}\r\n\r\nrender()\t\t\t\r\n{return (\r\n\t\t<>\r\n\t\t\t<div className=\"Container\">\r\n\t\t\t\t{this.SquareMaker()}\r\n\t\t\t</div>\t\r\n\t\t</>\r\n\t\t);}\r\n\r\n}\r\nclass App extends Component {\r\nrandomFunction(){return Math.floor(Math.random()*256);}\r\nsmallRandomFunction(){return Math.floor(Math.random()*5);}\r\nrandomrbg(){\r\n\t\tlet r = this.randomFunction();\r\n\t\tlet g = this.randomFunction();\r\n\t\tlet b = this.randomFunction();\r\n\t\treturn `rgb( ${r}, ${g}, ${b})`;\r\n\t}\t\r\nstate={chosenNumber:this.smallRandomFunction(),color:this.randomrbg(),visited:false};\r\nresetButton(){\r\n\tdocument.querySelector(\"button\").textContent=\"NEW COLOR\";\r\n\tdocument.querySelector(\"#Guess\").textContent=\"\";\r\n\tdocument.querySelector(\"#header\").style.backgroundColor=`#669999`;\r\n\tthis.setState({chosenNumber:this.smallRandomFunction(),color:this.randomrbg(),visited:true});\r\n}\r\ncomponentDidMount(){\r\n\t\tthis.setState({chosenNumber:this.smallRandomFunction(),color:this.randomrbg()});\r\n}\r\nrender(){\r\n\treturn (<div>\r\n\t\t\t\t\t<h1 id=\"header\">The  \r\n\t\t\t\t\t\t<span id=\"rgbColor\" >\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t{this.state.color}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t</span> \r\n\t\t\t\t\t\tguessing game\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t<div id=\"stripe\">\r\n\t\t\t\t\t\t<button  \r\n\t\t\t\t\t\tonClick={this.resetButton.bind(this)}> \r\n\t\t\t\t\t\t\tNEW COLOR\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span id = \"Guess\" >\r\n\t\t\t\t\t\t\tWhich one is it?\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<SquaresGrid n={6} \r\n\t\t\t\t\tchosenNumber= {this.state.chosenNumber} \r\n\t\t\t\t\tcolor={this.state.color}\r\n\t\t\t\t\tvisited={this.state.visited}\r\n\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}